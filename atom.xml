<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>gyuri_oh Devlog</title>
 <link href="https://gyurioh.github.io//atom.xml" rel="self"/>
 <link href="https://gyurioh.github.io//"/>
 <updated>2022-05-21T09:18:08+09:00</updated>
 <id>https://gyurioh.github.io</id>
 <author>
   <name>gyuri_oh</name>
   <email>fridayeveningcallme@gmail.com</email>
 </author>

 
 <entry>
   <title>Perfect Circle</title>
   <link href="https://gyurioh.github.io//2022/05/21/perfect-circle"/>
   <updated>2022-05-21T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/21/Perfect Circle</id>
   <content type="html">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/lX8QVBl-ZG0&amp;amp;t=10s&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
  &lt;p&gt;새는 알에서 나오기 위해서 투쟁한다. 알은 세계이다. 태어나려고 하는 자는 누구든 하나의 세계를 파괴하지 않으면 안된다. 새는 신을 향해 날아간다. 그 신의 이름은 아브락사스이다.&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>0422 내용</title>
   <link href="https://gyurioh.github.io//2022/05/20/0422-%EB%82%B4%EC%9A%A9"/>
   <updated>2022-05-20T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/20/0422 내용</id>
   <content type="html">&lt;p&gt;atomic한 행동이란?
atomic 한방에 실행된다. 이 명령 끝나기 전까지는 누구든지 개입을 할 수 있다.
크리티컬 섹션 동기화는 완전 다른 건이다!!
크리티걸 섹션이 동기화되어도 스케줄러는 쓰는 겁니다.&lt;/p&gt;

&lt;p&gt;권한을 얻기 보다는 내가 여기에 접근을 했으니까 그쪽 스레드를 블락하겠다.
아토믹이랑은 상관이 없는 행동.&lt;/p&gt;

&lt;p&gt;뭘쓰던 커널모드 전환이 이루어져야 한다.
커널 오브젝트 안쓴다.
프로세스간에 접근할 일이 없다.
프로그램 종류에 따라 다르지만 게임서버는 프로세스로 나누어 기능을 분리할 이유가 없다. 스레드 기능을 분리했다? 서로 다른 프로세스로 기능을 분산하는 목적은 부하분산.
최종 결과는 물리적으로 하드웨어가 다르다. 그럴려면 애초에 물리적으로 하드웨어 서버를 분리할 것까지 고려한다면
커널 오브젝트가 아니고 네트워크가 됨.&lt;/p&gt;

&lt;p&gt;— 본 수업 시간 —&lt;/p&gt;

&lt;p&gt;함수 호출 스택 : 돌아가는 주소와 백업된 ebp 2개만 사용함. 
걔만 날리면 다 깨짐.
스레드 동작이 궁금하다. 스케줄링을 어떻게 하냐가 궁금한건가?
앞 함수의 ebp 백업 &amp;lt;- push ebp&lt;/p&gt;

&lt;p&gt;재귀함수 - 계속 사용하면
스택메모리가 찬다.
계속 스택을 쌓아가기 때문에 언젠간 스택의 1M를 다 사용한다.
탈출조건이 없으면!!&lt;/p&gt;

&lt;p&gt;런타임 스택 오버 플로우가 발생합니다 &amp;lt;- 확정된다.
저런 빌드를 안내게 재귀를 만들려면 어떻게 해야한다?
재귀는 확인 해야함. 
재귀가 위험한건 아니다.
대신 조건을 만족한다 - 재귀를 중단할 수 있는 코드가 들어가야 한다.
걔만 들어가면 어떤 리턴의 상황. 
파라미터를 받고 , 어떤 조건이 되었을 때
x &amp;gt; 1000000
return;
조건으로 중단하고 나간다면. 
얘가 보기에는 크게 문제가 없어보인다. 경고를 내지 않는다면.&lt;/p&gt;

&lt;p&gt;몇번을 호출해야 스택이 터지는지 살펴보자.&lt;/p&gt;

&lt;p&gt;A에 파라미터 1을 넣고. 
스택을 100바이트 잡았으니까.
스택에 통통통통 늘 것이다.
디버그빌드에선 정말 몇번 못돈다. 
지역을 너무 많이 잡는다.
85631돌고 나서야 재귀를 돌고 터졌다.&lt;/p&gt;

&lt;p&gt;트리같은거 만들때 100프로 재귀를 쓴다. 안전하기 때문에!
트리라는 구조 . 깊이. depth. 이진트리에서 깊이가 하나씩 늘어난다.
하나-&amp;gt;2개-&amp;gt;4개-&amp;gt;8개… 
저렇게 8만5천건은 할 수 없겠지만. 트리라는 구조에서 재귀를 탐색하는 구조 만들었는데,
불안정하면 2^800000 개수가 있다는 조건. 
1억 2억개를 넣더라고 재귀는 터질 일이 없어.
잘만 만들고, 정확히 계산된 대로만 했다면 문제될 게 없다.&lt;/p&gt;

&lt;p&gt;재귀를 사용하는 근본적인 이유?
반복문 - 비교와 연산.
재귀 - 그 앞의 함수의 스택이 살아있다. 앞의 상황에 모든 상황들이 기억되어 있다.
값을 기억한다. 그 상황에서의 모든 지역변수들이 기억되었다. 
반복문은 단방향. 트리같은 경우는 돌아가야 한다. 어디서 왔는지를 알아야 한다.
“돌아갈 길”
그것을 지역에 두고 스택에 쌓아둔 것.
그걸 그대로 쌓아둔 상태에서 다음 코드가 돌아가니까.
리턴만 해도 앞의 모든 상황이 기억된 경우.&lt;/p&gt;

&lt;p&gt;그게 아니면 재귀를 쓸 이유가 없다.
그냥 조건 체크해서 반복하는게 좋다.&lt;/p&gt;

&lt;p&gt;재귀는 호출을 해서 올때마다 5번 왔다면. 그 상태가 저장이 된 것.
돌아가면 이전의 상태로 갈 수 있다. 스택을 활용해서!!!! &amp;lt;- 이게 장점이다.&lt;/p&gt;

&lt;p&gt;모든 재귀는 반복문으로 다 바꿀 수 있다.
별도의 자료구조를 통해서 저장해야 할 공간을 스택처럼 다른 공간에 기억한다면 모든 재귀는 없앨 수 있다.
결국 그 스택을 우리 자료구조로 갖고온 거니까.&lt;/p&gt;

&lt;p&gt;재귀라는게 있으니까.&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;이 픽셀과 이어져있는 구간만 색칠을 하자. 얘는 반복문으로 불가능하다.
어디서 어디로 이어졌는지 알 수가 없다.&lt;/p&gt;

&lt;p&gt;나중에 길찾기도 똑같고…
최적의 탐색 알고리즘이 되는 것.
A*알고리즘 쓰는 거?&lt;/p&gt;

&lt;p&gt;지금은 길을 찾는게 아니고 무작정 퍼지는 것.
의도는 그거 하나.
그냥 칸칸칸이 있는 상태에다 쳤을 때. 여기에서부터 이런식으로다가 퍼져나갈 대상이 막혔다고 가정한다.&lt;/p&gt;

&lt;p&gt;퍼져나가야한다. 위칸 아래칸 옆칸. 어 여기는 못가네? 하면 안 갈거기 때문에.
정말로 여기 좌표를 기준으로 시작한다면
자기 주변에 색깔 칠하고 퍼진다.
반복문은 하나의 방향으로 쫙 갈 뿐이지만, 재귀는 하나의 좌표가 있으면 4개의 자식들이 생긴다.
깊이 우선 탐색!!
무조건 4개씩 퍼져서 색칠을 해나간다.&lt;/p&gt;

&lt;p&gt;화면 지우는거 system(“cls”); 
너무 속도가 빠르면 슬립을 쓴다. 윈도우 API!!
sleep. 속도를 늦추고 싶을 때. 
윈도우 헤더 해야 함.&lt;/p&gt;

&lt;p&gt;밀리세컨드 -&amp;gt;
슬립은 고차원적인 함수. 스레드 함수.
C언어에는 멈춘다는 개념이 없다. 언어주제에 못 멈춘다.
내 코드가 멈춘다? OS의 개입이 있어야 한다.
우리가 잠깐 프로그램 속도를 멈추고 싶을때. 
쟤의 구체적인 행동은 우리가 스레드를 다룰 때 할 것.&lt;/p&gt;

&lt;p&gt;다음시간에 이놈에 대해서 논의하면서 알고리즘 공부 해 볼 것.&lt;/p&gt;

&lt;p&gt;@@포인터!!!@@&lt;/p&gt;

&lt;p&gt;포인터 - 메모리 주소 저장. os 이름 따라 간다
인식할 수 있는 최대 메모리는 4G. 2의 33승(unsigned int)
32비트는 가능하다.
근데 64비트는 안된다.
unsigned long. unsigned int라는 공간에 포인터 주소값을 저장해서 넘기던가. 이런걸 많이 했다.
예전에 윈도우 api도 그렇게 나왔었다.
unsigned long 형태의 파라미터에 포인터를 넣는 것을 활용했다.
잘못되었다. uint_ptr로 바뀜.&lt;/p&gt;

&lt;p&gt;우리가 당연히 프로그램을 잘만 짰으면
32비트로 서비스 된거는 그냥 프로젝트를 64로 바꿨을 때 문제생길일이 없어야 한다.
표준에 있는대로 썼다면. 근데 대부분 문제가 터진다.&lt;/p&gt;

&lt;p&gt;윈도우 서버버전은 이제 32비트가 안나온다.
당연히 64비트로 개발하는게 당연한건데 32비트로 만들어진 게임서버가 많다.
우리가 동적할당해서 쓸 수 있는건 2G가 한계. 이거 다 한계치에 도달했음.
메모리가 부족해. 더이상 추가할 수 없어.&lt;/p&gt;

&lt;p&gt;최대한 컨텐츠 안쓰는 것 정리하자. 64비트로 바꿀 수가 없으니까.
메모리는 증가하게 되어있다.
동접자를 줄여서 해결했다.&lt;/p&gt;

&lt;p&gt;메모리 확보를 6개월 해서 300메가, 400메가를 확보했다.
계속 로그추가하고. 안쓰는지 보고 이거로 인해 영향이 없는가 보고.
덜렁 지워버릴 수 없다.
뭔가가 밀려서 또다른 문제가 터질 수도 있다.
sizeof를 하지 않고 그냥 define해서 하드코딩하는 코드가 있을 수 있다.
그래서 걔를 주석으로 막고 그거에 관련된 변수에 로그 심어서 정말 호출조차하지않는지 지켜본다.
그 메모리를 지울 수 없으니까. 걔랑 크기 똑같은 형태로 버퍼. 영향주지 않게.
이렇게 해도 문제가 없는지 기다린다.
일단 이 변수가 지워졌음에도 불구하고 빌드 되니까.
이거로 인해 외부에 다른 영향 없는지.
여기에 접근하는 코드는 있나. 특정 값을 밀어넣고 바뀌는 코드는 있나 확인하기.&lt;/p&gt;

&lt;p&gt;왜 리틀 앤디안을 쓰는가? 0x00001 있을 때 뒤에서부터 읽어야 유효값을 읽을 수 있다.&lt;/p&gt;

&lt;p&gt;우리가 배열을 쓴다?
2차원 배열 -&amp;gt; 게임에서 사용.
sin cos 라디안 값 넣게 되어있음.
물리게임 만들때 사인 코사인 지금은 때리는데
도스시절은 런타임 금지. 너무 느려서.
느린걸 빠르게 만들기 -&amp;gt; ? 베이킹 : 미리 작업 해두기. 실시간 연산이 느리면, 미리해두면 가져다 쓴다.
메모리를 포기하고 실행속도를 높인다! 성능을 높이겠다는 건 이걸로 된다.
길찾기 느리네? 미리 테이블 만든다. 사인코사인 느리네? 테이블 만든다.
sinTable[360], cosTable[360]
이것도 연산을 빠르게하기 위해 데이터를 해놓은 것.
게임에서 어마어마하게 커다란 필드가 있다.
이 안에 오브젝트들이 무수하게 많이 있는데… 온갖 것들이 다 있다.
2000마리의 오브젝트가 있다.
바닥에 아이템이 수천개 있다.
일반적인 rpg게임 만든다. 아이템 먹는 기능?
충돌 체크-&amp;gt; 움직임이 있을 때마다. 어떤 오브젝트와 충돌 되었는지를 하나하나 뒤져야 한다.
오브젝트가 많아지면 많아질수록 성능은 급격하게 떨어진다.
이를 오브젝트 개수와 상관 없이 한방에 해결하려면?
이 자리에 누가 있는지 한방에 알아버리면 된다.
내가 서있는 이 자리에 누가 있는지 한방에 알아버리자.&lt;/p&gt;

&lt;p&gt;솔루션 ) 그리드로 나눠버리자. 일정 규격의 타일로 나눠버린다.
아이템이 떨어진 타일에 정보를 꽂아버린다. 포인터를. 
무조건 mmorpg는 그리드 방식을 쓴다. 이건 커다란 2차원 배열이 나오는 기반으로 가는 것.
논타겟팅 마법을 해. 동그랗게 여기에 있는 애들이 맞아야해.
하나하나 좌표 체크 못한다.
논타겟팅의 공격 -&amp;gt; 그리드 방식으로 처리. 이렇게 하지 않으면 성능을 낼 수 없음.
이럴 때도 이차원 배열 많이 쓸 것.&lt;/p&gt;

&lt;p&gt;aI -&amp;gt; if else.
이 분기 많은데 어떻게 예쁘게 하느냐? 로 방법이 나뉜다.
여기서 분기문의 방식이 관리 안되니까. FSM. 상태머신.
객체화 시킨다. ifelse를 클래스로 객체화 시킨다.
무수히 많은 스위치케이스를 클래스로 묵는데. 이프엘스랑 같은.
비헤이비어 트리. 언리얼이 쓰고 있음. 행동 트리!! 트리로 만든것 그냥.
결국은 이프 엘스. 옛날 방식에서 ai는 무수히 많은 이프엘스를 배열로 한 것.
특정한 상태의 개수를 딱 딱 뽑아낼 수 있다면 배열로 만들 수 있음.
나의 HP, 적 HP, 거리. 아군 수. 이런 요소들을 반영하고 싶음.
4개 요소만 된다 해도 조건 많아짐&lt;/p&gt;

&lt;p&gt;AITable [5] [5] [4] [3] -&amp;gt; 오토마타. 이 테이블 만드는게 힘들다. 이건 기획자한테 넘김.
근데 요론거 이제는 구식. 스타도 이렇게 구현한다. 다차원 배열!!!&lt;/p&gt;

&lt;p&gt;구조체. 구조체 할 거 많다!&lt;/p&gt;

&lt;p&gt;typedef -&amp;gt; struct 키워드 빼버릴려고 하는 거.
근데 이건 사라졌다. typedef는 쓸 일이 없는 것이다.&lt;/p&gt;

&lt;p&gt;구조체 데이터 패딩 -&amp;gt; 구조체에서 제일 크기가 큰 자료형 기준.
가장 큰 변수랑 상관이 없이 보아야 한다.
그건 다른 조건.
그냥 자기 크기다. 자기 크기에 경계에 서야함. 
자기 크기 하나. 캐릭터는 1바이트이니 어디에나 서도 됨.
변수가 선언될때 내 앞에 패딩을 몇개 붙일까 하는거. 뒤가 아니다. 앞.
내가 몇 바이트니까 내 앞에 몇을 붙일까.
캐릭터는 내 앞에 패딩이 안들어간다.
쇼트는 0,2,4,8,10,12 로 들어가야한다. 내 앞에 캐릭터 있으면 1 들어간다.
내 앞에 4로 떨어지면 안들어가도 된다.
인트. 내가 4에 서야 한다. 
캐릭터가 하나 더 붙었다. 얘로 인해 내가 4의 경계에 못서기 때문에 3바이트 패딩 넣어야 한다.
‘나’를 위해서 하는 거니까. 내 앞에 패딩을 넣는다고 생각해야 한다.
__int64는 8의 경계에 서야 한다.
모든 변수는 자기 크기의 경계에 서야 한다. 그렇게 해야만 한다.
지역변수 전역변수 모두 동일한 규칙이다.
그런데 일반적인 변수로 할 때는 생각한 적이 없다. 생각 안해도 되니까. 문제가 안 되니까!
구조체 때는 크기가 달라지니 고민하는 것이다.&lt;/p&gt;

&lt;p&gt;근데 가장 큰 변수 -&amp;gt; 나의 전체 크기.
이 구조체의 전체 크기. 뒤에 붙이는 패딩에서의 이야기.
@@이 구조체 안에 8바이트짜리 덩어리가 있었으면 8로 떨어져야 한다.??@@&lt;/p&gt;

&lt;p&gt;근데 이렇게 하는 이유가 뭘까?
변수가 차지하는 메모리 공간을 온전히 읽어오기 위해서…?
왜 그렇게 읽게되는거죠? 
1)한번에 처리하는 단위가 4바이트/8바이트라서?
2)캐시메모리에서 짤릴 수 있기 때문. 멀티스레드 환경에서 캐시메모리에서 짤려버리면 코어 여러개에서 접근을 할 수 있다?&lt;/p&gt;

&lt;p&gt;지금 우리가 실질적으로 단순히 사용하는 입장에선 아무 상관이 없다.
저 패딩 밀어버릴거다.
패딩이라는 규칙 자체는 프로젝트 속성 -&amp;gt; 코드 생성 -&amp;gt; 구조체 멤버 맞춤 설정가능.
이걸 1로 바꾸면 모든걸 1로 맞춤.
pragma pack이라고 할 수 있음. 네트워크 환경에선 1바이트 단위로 모두 바꿀 것이다.
성능을 위해 패딩을 붙여준거기 때문에 네트워크 프로토콜에서는 크기가 제일 큰 문제.
네트워크 프로토콜이란? 이쪽 장치와 저쪽 장치가 서로 통신하는 환경인데. 
서로 규격이 안맞으면 안됨.
그땐 의도적으로 #pragma pack 써서 1바이트로 바꿔버릴것.
구조체 선언만을.&lt;/p&gt;

&lt;p&gt;근데 만약에 저런 2바이트나 4바이트 짜리가 얘의 경계에 사지 않았다면.
CPU가 읽어오는 행동이 2번 이상이 될 수 있음. 약간의 성능 저하 발생! 
메모리 번지에 접근이란건 1 2 4 8 16. 
17에 접근한다 없음. 그 단위로 읽어들일것이다.
메모리에서 버스에서 접근할 때. 저 램에 있는 메모리에서 뭔가 긁어온다라는 모든 행위자체도.&lt;/p&gt;

&lt;p&gt;무조건 캐시라인 단위로 긁어온다.
우리가 실질적으로 변수 읽을때 걔가 있는 캐시라인이 그 캐시메모리에 있어야 한다.
캐쉬라인은 128바이트로 넘어가지 않았다.
캐시라인? 한번에 캐시 메모리가 긁어오는 단위.
1바이트를 원해도 64바이트를 긁어온다.&lt;/p&gt;

&lt;p&gt;일반적으로 언급하기 캐시히트를 높이기 위해선?&lt;/p&gt;

&lt;p&gt;캐쉬 -&amp;gt; 변수를 뭔가 썼거나 읽었고 또 읽는다.
요렇게 했으면 코어에서 바로 물리메모리로 접근할 수 없다.
무조건 캐시메모리부터 파악하고 내려간다.
L1-&amp;gt;L2-&amp;gt;L3에 없다면 물리메모리에서 긁어온다.
근데 L1있으면 캐시히트.
캐쉬히트가 높이는게 성능이 아주좋아진다.&lt;/p&gt;

&lt;p&gt;캐쉬히트를 높이는 방법? 지역성 -&amp;gt; 가까이 있는걸 쓰자. 방금 썼던걸 또 쓰자.
가까이 있는걸 쓰면 왜 캐쉬히트가 높아져?
캐시메모리 설계할 때부터 근방에 접근할 일이 많더라.
그러니 그 주변에 있는걸 긁어버리자. 캐시 라인 단위로.
그 캐시라인이 64바이트.
A라는 변수 하나만 선언해도 걔가 속한 64바이트를 긁어온다. 물리메모리에서.
근데 어디로? a 뒤로 64? 앞으로 64?
64도 경계. 모든 메모리를 0바이트부터 64바이트로 끊어버림.
메모리가 0번지라는 상황에서 메모리가 있다면 64로 그리드를 쳐버리는 상황.
하나하나의 그리드가 캐쉬라인의 한 덩어리.
내 변수 하나가 캐쉬라인 하나에 걸쳤음-&amp;gt; 2개 긁어야 함. 이런 상황 무조건 피해야 함.
데이터의 깨짐!&lt;/p&gt;

&lt;p&gt;MOV라는건 아토믹 연산자. MOV라는 명령어는 완료 될 때까지 멈추지 않는다.
OS의 개입이 없다. 개입이 있을 수가 없어. atomic 연산자기 떄문에.
우리 입장에서는 변수 하나를 가지고 올거야.
CPU입장에선 완벽히 한방에 처리한다.
근데 내부에서 할려다 보니까 캐시라인 2개를 긁어야 하네?
캐시라인에서 긁어오는 과정은 atomic하지 않다.
메모리의 atomic과 명령어의 atomic은 개념이 다르다.
명령어에서의 atomic은 인터럽트 없다. 이거 처리되는 과정에 하드웨어의 인터럽트 될수 없다.
명령어 입장에선 mov처리하기 전에 아예 안돌아온다. 
얘는 메모리로 돌아오고. 얘는 2덩어리로 얻어와야 비교가 된다.&lt;/p&gt;

&lt;p&gt;캐시라인은 64란게 동일하지만. 아키텍쳐에 따라서 32로 읽어오기/64비트로 읽어오기.
아키텍쳐마다 다르다.
요즘 아키텍쳐일수록 32. ? 캐시라인 64는 동일하지만.
인텔은 경계가 틀어지더라도 실제로는 64경계에만 끼지 않으면 데이터 쪼개지는 현상이 나타나지 않음.
AMD는 데이터 쪼개지는 현상이 나타남 32 경계만 있어도.&lt;/p&gt;

&lt;p&gt;구조체의 전체 패딩은 왜맞추냐? 가장 큰걸로 왜 맞추는 거야?
-&amp;gt; 구조체 배열 때문에!!
클래스도 마찬가지. 클래스와 구조체가 동급!
크기를 가장 큰 녀석에 맞춘다. 그렇게 잡아줘야 내 다음 다음 뒤이어서 선언된 구조체에 문제가 없다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>0420 내용</title>
   <link href="https://gyurioh.github.io//2022/05/20/0420-%EB%82%B4%EC%9A%A9"/>
   <updated>2022-05-20T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/20/0420 내용</id>
   <content type="html">&lt;p&gt;04 20&lt;/p&gt;

&lt;p&gt;콜스택 ‘외부 코드’ -&amp;gt; 보고 싶은 경우는 ‘외부 코드 표시’를 활성화해야 한다.
디버거가 내가 짠 코드 이외에는 안 보여준다.
괜히 보여주면 정신없어지니까.
외부코드 표시를 활성화시키면 실제로 런타임 라이브러리가 되었든 DLL이 되었든 다 보여줄 것.
외부 정보의 도움을 받을 수도 있는데, 추가적인 확인 필요함.
pdb를 활용하고 뭔가 하다 보니까 아마 걔를 가지고 도움을 받는 것일 수도 있어서.&lt;/p&gt;

&lt;p&gt;프로세스 잡아라. 디버깅하고 있는 상태에서 프로세스 잡을 수 있다고 말했음.
pdb맵핑이 안됨. 프로세스 연결로 잡아도 오로지 어셈블리로만 해야함.
함수이름도 안나옴. 주소값도 안나옴.
돌아갈 함수를 뒤집어놓은 상태에도 그 이전의 돌아갈 함수 주소를 가리키고 있다.
다른 외부 정보의 도움을 받아서 콜스택을 추적하고 잇는 것인가?
pdb를 맵핑 안시켜서 디버그해보려는 것.
소스코드는 아무것도 나오지 않을 것. 함수 이름을 보여줄 수는 없다.&lt;/p&gt;

&lt;p&gt;while(0) 무한루프 넣은거. 돌고 있음.
“pdb도 없는데 콜스택을 어떻게 추적중인가?”
나중에 다시 논의할 것임.
콜스택이 형성되는거 자체가 런타임에서 호출될때마다 보여주는 것.
얘만 보고서는 확답 주가기 애매함.
일단 됐고.
일단 요런식으로 돌아가고 있고 만약 진짜 eip가 깨져버렸다면.
무한루프 같은데 빠져버리면 힘듬.
스택에 대한 변화를 많이 주었을 가능성이 크다.
우리가 알고 있는 무한루프랑은 다름. 무한루프라기 보다는 재귀스러운 건 아님.
ip레지스터를 잘못 건드려서. 돌아갈 코드보다 위를 지정하게 되버렸다.
리턴을 해도 또호출하고 또호출하고. 스택을 빠졌다 들어왔다 함.
이것을 분석이 된다면 esp 하단부에 내용을 뒤져서.
코드 영역스러운 지점을 찾아가면서 힌트를 찾을 수 있음.
@@그렇게 찾는 시도를 해봐야 함!!!!!@@&lt;/p&gt;

&lt;p&gt;ebp건드리는건 실패했음. 컴파일러가 체크하는 코드를 넣어버림.&lt;/p&gt;

&lt;p&gt;함수 파라미터 -스택에 넣고 있음. 어떤 순서로 넣을 것인가?
대부분의 함수는 오른쪽-왼쪽! R 2 L. 321 순서로 push push push 됨.
다른 변수나 상수 넣으면 상관이 없겠찌만.
어떤 함수를 통해서 그 리턴값을 활용하는 코드가 되었고.
그 녀석들 사이에 호출 순서에 영향이 있다면?
짱구를 굴려서 파라미터를 넣어야 한다. 근데 저렇게 짜지 않는다. 
누가 저렇게 짜면 같이 일을 하면 안 됨.
파라미터 활용할 때. 논의되어야 할 것은 스택에 넣는 것은 알겠는데.
실제 사용하는 측에선 어떻게 쓰느냐?&lt;/p&gt;

&lt;p&gt;콜 들어가서 실제 함수 가보니까.
a밖에 사용 안했는데. a만 가고 있는데.&lt;/p&gt;

&lt;p&gt;기존에 내 지역변수 같은 경우 ebp-로 갔었지만 
파라미터는 ebp+로간다.
내 함수 바깥에 있기 때문이다!!!!!!&lt;/p&gt;

&lt;p&gt;내가 잡은 ebp 오히려 아래쪽에 있다..
그래도 이건 지역변수. 실질적으론 내 스택 아래쪽에 있지만 여전히 지역변수이다.
그래서 바깥쪽을 건드린다라는 것.&lt;/p&gt;

&lt;p&gt;그다음 문제는 저 함수에 대한 스택을 누가 정리할 것이냐?
누군가는 저기에 psuh push push 되었던것을 정리해줘야 함.
얘는 여기 있습니다. 여기 있죠. call하고 나서 돌아온 자리서 add esp 0C를 해줍니다. 
add하니까 아래로 내려감 스택이. 요 psuh push push를 정리한것.
1)함수 좌측에서 정리한 것.
2)함수 내에서 자기가 파라미터에 대한 스택을 정리하고 나가는 방식도 있음.&lt;/p&gt;

&lt;p&gt;그래서 호출 규약이라는 것이 나옴.
호출규약은 위키백과에 정리가 잘 되어있음.
위키백과거 참고해보면. 뭐가 많은데. 대부분 잘 사용을 안 하기 때문에.
syscall은 커널모드로 전환되는 것. 우리는 대상이 아님.
우리는 대부분 사용할 수 있는 것. 일반적으로 사용하는 친구는 stdcall. cdecl을 활용함.
64비트. x86-64는 독특함. 호출자가 하는 것도 맞음.&lt;/p&gt;

&lt;p&gt;레지스터 내 매개변수가 비어있다!! 
3개를 파라미터를 던질 떄 온전히 스택으로만 푸시푸시푸시했는데
성능이 떨어짐. 굳이 스택가지고?
그래서 다른 호출 규약들은 레지스터를 동원시키자.
어차피 레지스터 남아돌고있는데. 레지스터에 그 값좀 넣으면 안되냐?&lt;/p&gt;

&lt;p&gt;그래서 그 레지스터에 온갖 것을 활용하는 경우.
파라미터. RDX, R8, R9 등을 사용하고 있음. 파라미터가 4개 이하라면 레지스터에 넣고 레지스터를 가지고 뽑아올 것입니다.
그리고 그 이상이 들어가면 어쩔 수 없이 스택을 ㅅ활용합니다. 무한대로 레지스터가 있는 것은 아니기 떄문에!&lt;/p&gt;

&lt;p&gt;원래 호출규약이라는건 함수 문법이 어떻게 되냐?
윈도 API보면.&lt;/p&gt;

&lt;p&gt;#include &lt;Windows.h&gt;&lt;/Windows.h&gt;&lt;/p&gt;

&lt;p&gt;void WINAPI AAA()
{
}&lt;/p&gt;

&lt;p&gt;stdcall.
함수 선언을 하기 위한 정식 문법은 저런 식.
리턴 지점과 호출 규약을 지정해서 정하기.
근데 우리 호출규약 아무도 안 쓰고 있어요. 그러면 어떻게 되느냐?&lt;/p&gt;

&lt;p&gt;프로젝트의 속성 보면 
고급-&amp;gt;호출 규칙 _cdecl. 
따로 지정을 하지 않는다면 컴파일러 옵션에 지정된 호출 규약으로 만들어준다.
호출하는 입장에서 파라미터 스택을 정리하는 것이다. 
콜 뒤에 esp를 밀어주는 코드가 있음.&lt;/p&gt;

&lt;p&gt;그래서 stdcall을 실제로 사용하게 된다면.&lt;/p&gt;

&lt;p&gt;_stdcall DDD(int a, int b, int c)
{
	a++;
	b++;
	c++;
}&lt;/p&gt;

&lt;p&gt;RET에 인자가 들어감. -&amp;gt; 요게 스택을 정리하면서 나감.esp를 내리는 것.
피호출자 입장에서 파라미터 스택을 정리하며 나가는 코드가 됨.&lt;/p&gt;

&lt;p&gt;64비트용 눈으로 보기.
레지스터에 정말 MOV할 뿐.
넘어가는 건 push push push 할 뿐.&lt;/p&gt;

&lt;p&gt;함수 기능 만들 때 메모리에 대한 부분.
함수 호출 했을 때 그 안에서 동적할당 하네? 그 안에서 포인터 넘겨주네?
이거 쓰고 나서 delete? free? 아님 그냥 포인터 넘기고 쓸거 쓰고 버리면 되나?&lt;/p&gt;

&lt;p&gt;@@뭔가 메모리 동적할당이 일어났다하면 그걸 생성하는 지점과 정리하는 지점이 같은 계층에 있는게 좋다.@@&lt;/p&gt;

&lt;p&gt;그래서 그냥 포인터를 던지는 것.
안에서 내가 할당해서 뱉어줄게. 깔끔해서 해서 지워. -&amp;gt; 약간 위험성이 있다.
그런 관점에서는 _cdecl이 합리적.
stdcall로는 불가능한 것이 있다. 가변 인자.
함수 안쪽에선 절대 알 수 없다. printf같은 것.
그래서 x64같은것도 외부에서 정리하는 것으로 됨.
우리가 언제 함수 호출 규약 규칙을 따라야하고 생각해야 하나??&lt;/p&gt;

&lt;p&gt;“호출 되는 코드와(하는 코드와)
해당 함수의 컴파일 환경이 다를 때!!! 또는 이미 만들어져 있을때!!!”&lt;/p&gt;

&lt;p&gt;그런 애들은 이미 빌드가 된 상태. 어셈블리 코드로 함수가 다 만들어져 있음.
쟤네가 cdecl로 만들었는데 우리가 stdcall로 만들었다?
정리가 안 된다. 정리를 둘 다 하다가 문제가 생길 수 있다.&lt;/p&gt;

&lt;p&gt;그게 한 가지 있고.&lt;/p&gt;

&lt;p&gt;나중에 윈api에서 이런거 나올텐데.&lt;/p&gt;

&lt;p&gt;나중에 콜백이란 개념을 쓰는데
함수는 내가 만들지만 콜은 window가 해줄게란 것이다.
우리가 함수를 만들고 함수 포인터를 window에 등록을 시킬것이다.
window 내부에 콜하는 함수가 만들어져 있다.
니네가 만든 니함수 주소만 알려줘 호출시켜줄게. -&amp;gt; 호출은 stdcall로 만들었다.
그럼 우리가 stdcall로 만들어야 한다.&lt;/p&gt;

&lt;p&gt;내부에서 할 거 다하고 내 코드로 함수를  호출해주는건데.
32비트는 stdcall로 만듬. 우리도 저렇게 해야 한다.
callback이나 winapi를 사용해야 한다. 그래서 #include &lt;window.h&gt;를 추가.&lt;/window.h&gt;&lt;/p&gt;

&lt;p&gt;혼자 짤때는 호출규약을 공부해야 할 이유도 의미도 없는데
이런 상황에서는 주의가 필요하다.&lt;/p&gt;

&lt;p&gt;void DDD(int a, int b, int c)
{
	printf(“%d %d %d \n”, a, b, c);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;a = 0;
DDD(++a, ++a, ++a);&lt;/p&gt;

&lt;p&gt;뭐가 들어가냐?
결과가 다르게 나온다.
표준에는 정의가 나오지 않는다.
윈도우에서는 333.
GCC에서는 321로 나옴. 
적당히 하나에 대해서 하는 것은 상관이 없다.&lt;/p&gt;

&lt;p&gt;파라미터 할때 ++해서 던지는거 많이 쓰니까 이런건 상관이 없는 거고.
함수 호출 쪽으로는 이런 느낌으로 보면 되는거고.&lt;/p&gt;

&lt;p&gt;구조체. 덩어리일 뿐이다.&lt;/p&gt;

&lt;p&gt;구조체를 그냥 던지는 행동은 더러운 것. 
나중에도 실수하는 사람이 있음. 
그래서 먼저 조금 보여줌!!!
구조체같이 덩치가 큰 친구를 던질 때, 객체 자체를 던지지않는다.
콜바이 레퍼런스로 포인터를 던진다.
@@memset이 뭐지?? 0으로 밀어버리는 거.
xor eax eax -&amp;gt; eax를 0으로 만듬.&lt;/p&gt;

&lt;p&gt;AAA a;
memset.
eax가 리턴값 받아오고 주는 것. 
알면서도 보면 그게 안 떠오름.
어 eax에서 뭘 받네? -&amp;gt; 눈에 익혀야 함. 함수 콜하고 eax에 뭘 받네? 그럼 리턴 받는걸로 인식해라!&lt;/p&gt;

&lt;p&gt;구조체를 리턴 -&amp;gt; 정신이 나간 사람이다.
구조체 자체를 한번 리턴해보자. 절대 이렇게 쓰면 안 되는거지만.
만약 이렇게 쓴다면?
지금 보면 lea ecx, [ebp-178h]
파라미터 함수 호출되는건 rep mov해서 복사한거다. 
근데 함수호출전에 뭔가를 더 푸시해줌.&lt;/p&gt;

&lt;p&gt;구조체 리턴할 때 그 구조체를 받을 공간을 하나 더 만들어줌.&lt;/p&gt;

&lt;p&gt;반복문 rep movs . 4바이트 단위로 
카운터 반복문을 31번 돌림.
esi에서 edi로 ecx만큼 반복.&lt;/p&gt;

&lt;p&gt;객체 자체를 파라미터로 받는 것은 절대 하면 안됨.
근데 특정 구조체가 멤버가 하나인 경우. 포인터 하나.
클래스 구조체인데 정말 멤버가 하나이다. 우리가 일상적으로 사용할 수 있는 멤버 하나.
이건 안다. 이거는 컴파일러가 일반 변수랑 동일하게 판단함.
엉망진창 이상한 구조체는 없어야한다.
최적화 컴파일을 하면 깔끔하게 해준다..ㅋㅋ&lt;/p&gt;

&lt;p&gt;C 선행처리
undef -&amp;gt; 디파인을 취소시킨다.
한 cpp 안에서만 먹음. 
cpp10개 있는데 한 cpp에 define시켰다고 다른데 반영이 되지 않음.
조건부 컴파일.&lt;/p&gt;

&lt;p&gt;헤더를 하나 만들어 볼게요~
@@#pragma once -&amp;gt; 만약에 어딘가에서 실수로다가 인클루드를 한번 했는데 또 인클루드를 하면 중복선언이기 떄문에.
에러가 남. 그래서 2번 인클루드 하는 경우 밑에껀 무시할 수 있도록.
헤더에 헤더가 인클루드되다 보면. 어쩔 수 없음.&lt;/p&gt;

&lt;p&gt;C의 표준 정석대로 가다보면.. 우리가 항상 이걸 쓰죠.&lt;/p&gt;

&lt;p&gt;#ifndef AAAAAAAAA
#define AAAAAAAAA&lt;/p&gt;

&lt;p&gt;#endif&lt;/p&gt;

&lt;p&gt;속성-&amp;gt;전처리기 . 전처리기 정의에 뭔가 하면 모든 cpp에 정의를 한 것과 같은 효과.&lt;/p&gt;

&lt;p&gt;게임 컨텐츠 - 글로벌 서비스.&lt;/p&gt;

&lt;p&gt;“원 빌드로 모든 국가를 대상으로 서비스 하기를 원한다 : 모든 개발자!”
물론 그 게임 안에 언어만 바꾸면 딱 설정이 되도록.
그거 보면 전세계 사람 다 만난다.
정말 그 빌드 하나를 가지고서 하고 있다.
대부분 mmorpg는 못한다. 현지화를 해야 한다.
국가별로 서비스하기 위해서 코드를 따로 파는 경우가 많다.
그래도 어느정도 선에선 하나의 코드가 좋다.&lt;/p&gt;

&lt;p&gt;그러면 그나마 그래도 하나의 프로젝트 코드에서 이국가용 저국가용으로 코드를 분리하고 싶다 할때도
ifdef를 쓸 거다,&lt;/p&gt;

&lt;p&gt;#ifdef kor
#endif 
#ifdef JPN
#endif&lt;/p&gt;

&lt;p&gt;이렇게 되는 것. 
이런식으로 하기 때문에 글로벌서비스 하는 게임은 전처리기. 이프디파인이 많이 활용이 될 것.
나머지는 적당히 해 주면 됨.
매크로함수도 적당히 봤으니까 됐고.&lt;/p&gt;

&lt;p&gt;조건부 컴파일.&lt;/p&gt;

&lt;p&gt;@시스템 정의 매크로@!!!!!!
&lt;strong&gt;DATE&lt;/strong&gt;, &lt;strong&gt;FILE&lt;/strong&gt;
&lt;strong&gt;LINE&lt;/strong&gt; &lt;strong&gt;TIME&lt;/strong&gt; 
이건 전처리기에서 처리되기 때문에 런타임이 아니라 컴파일시간에 하드코딩이 되어버린다. 상수로서
현재 파일의 이름이 나온다. 
이거를 정말로다가 printf(“%s”, &lt;strong&gt;FILE&lt;/strong&gt;);
이러면 경로를 뱉어낸다.
%d, &lt;strong&gt;LINE&lt;/strong&gt; -&amp;gt; 정수로 나온다.
데이트나 타임은 쓸일이 별로 없는데. 라인과 파일은 우리가 쓸 일이 좀 있다.
나중에 로그같은걸 만들 때 활용할 일이 있을 것이다.&lt;/p&gt;

&lt;p&gt;얘는 별도의 타입을 만든다는 의미로 가는 것.
단순한 치환을 하는게 아니라 타입을 한다는 의미로 가는 것.&lt;/p&gt;

&lt;p&gt;switch case-&amp;gt; 메시지 종류대로 디파인 함.&lt;/p&gt;

&lt;p&gt;enum
{Move = 1, ATTACK, SKILL
AAAAA = 10, BBBB, CCC
}
위에서 지정한걸 그냥 1더하기로 넘어감.&lt;/p&gt;

&lt;p&gt;enum은 구조체처럼 타입을 지정할 수 있다.&lt;/p&gt;

&lt;p&gt;enum방식을 쓰지 않고 아까처럼 #define을 사용했다면?
액션을 요렇게 무브 1 스킬 3 이렇게 해보고. 함수 만들어야지~ 액션~
void Action(int ActionType)
{
	switch (ActionType)
{
	case move: 
		break;
}
}&lt;/p&gt;

&lt;p&gt;enum 자체를 하나의 타입처럼 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;이상한 수 인자로 못 넣게.
void action (enumAction ActionType)&lt;/p&gt;

&lt;p&gt;enum이 중복정의 되어서 에러를 뱉어냄.&lt;/p&gt;

&lt;p&gt;대부분 게임들이 대역을 나눈다.
저 메시지만 봤을 때 무슨 메시지인지 보인다~
메시지 번호만 봐도 뭐구나 보인다.
enum으로 했을때 보기 불편한 건 있는데, 해선 안되는건 아니다.&lt;/p&gt;

&lt;p&gt;@@함수 포인터 -&amp;gt; 그냥 진짜 함수 포인터.
그 주소를 저장할 수 있게 문법적으로 지정.&lt;/p&gt;

&lt;p&gt;이런 함수를 받아들일 수 있는 함수로서 선언합니다 ~ 함수 포인터.
함수 포인터 선호하는 사람은 많이들 선호한다.&lt;/p&gt;

&lt;p&gt;우리가 메시지로 한다 하면 1:1로 대응되게 함수를 묶을 것이다.
Proc1() 처럼 묶을 것.&lt;/p&gt;

&lt;p&gt;switch를 함수포인터 배열로 커버할 수 있다.&lt;/p&gt;

&lt;p&gt;void(*ptr[10]) ();&lt;/p&gt;

&lt;p&gt;ptr[1]  = proc1;
ptr[2] = proc2;
ptr[3] = proc3;&lt;/p&gt;

&lt;p&gt;ptr&lt;a href=&quot;&quot;&gt;ActionType&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;이러면 스위치케이스를 1줄로 줄여버릴 수 있음.
근데 이러면 디버깅하기 불편. 뭐가 호출될지 모른다.&lt;/p&gt;

&lt;p&gt;[const int*p
int const *p] 같은 것. 값을 바꿀 수 없음.
const는 *에 쳐진 것.
const *p = &amp;amp;a;
const *p&lt;/p&gt;

&lt;p&gt;p=&amp;amp;b&lt;/p&gt;

&lt;p&gt;int * const p
const가 p에 들어가서 값은 변경할 수 있지만 대상은 변경할 수 없다.&lt;/p&gt;

&lt;p&gt;차이점을 보자.&lt;/p&gt;

&lt;p&gt;분석할 때 불안하다. 뭔가 건드릴까봐.
그럴 때 const 선언을 해서 받아줘야한다.
그래야 안에선 안 건드릴것이라는 사실이 확정되었끼 때문에.
쓰는 사람들이 마음이 편해질 것이다.
그래서 포인터를 받거나 C++의 레퍼런스를 인자로 받을 때는 무조건 const를 해야한다.
쓰기 목적 아닌 읽기 목적으로 받을 때는 무조건 const.
무조건 몸에 배어야 한다. 협업을 할 때 좋은 습관이기 때문이다.&lt;/p&gt;

&lt;p&gt;코드 다시 살펴보면서 뭔가 실수한 거 있나? 하고 볼때 처리하면 좋다.
“오 이거 믿음이 간다~” 라는 인식이 생길 수 있음!&lt;/p&gt;

&lt;p&gt;strlen strcpy strcmp
문자열 복사, 길이 확인, 문자열 길이 비교 -&amp;gt; char const* 함.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>0418 내용</title>
   <link href="https://gyurioh.github.io//2022/05/20/0418-%EB%82%B4%EC%9A%A9"/>
   <updated>2022-05-20T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/20/0418 내용</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;18&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;변수 자료형 크기 하드코딩하지 말고 sizeof(?) * n &amp;lt;-이렇게 하기.&lt;/p&gt;

&lt;p&gt;일본에서는 네트워크 연산을 비트 단위로 쪼개는데, 그 때 비트 연산자를 사용한다.
우리나라는 그 정도는 아니다. 일반 유저들도 네트워크 환경이 좋기 때문이다.&lt;/p&gt;

&lt;p&gt;카운터 레지스터 -&amp;gt; 일반적인 반복문에서는 잘 사용하지 않는다.
우리가 만든 변수로 카운팅하면서 실행된다.&lt;/p&gt;

&lt;p&gt;모든 프로그램은 무한 반복 알고리즘을 전제로 실행된다.&lt;/p&gt;

&lt;p&gt;while(1), for(;;) -&amp;gt; 최적화 컴파일이 아닌 경우,
두 코드는 완전히 다른 결과가 나타난다.&lt;/p&gt;

&lt;p&gt;do {} while(0) -&amp;gt; 반복문을 돌 마음이 없다. 브레이크 통해서 바깥으로 튕겨나간다.&lt;/p&gt;

&lt;p&gt;if (조건 …1)
{
	중단
	공통 예외 처리 코드
	return;
}&lt;/p&gt;

&lt;p&gt;1번 로직
if(조건 …2)
{
	중단
	공통 예외처리 코드
	return;
}&lt;/p&gt;

&lt;p&gt;2번 로직
if(조건 …3)
{
	중단
	공통 예외처리 코드
	return;
}&lt;/p&gt;

&lt;p&gt;이런 상황일 때, 탈출하는 방법으로 사용될 수 있다.
goto를 사용할 수도 있다.
공통 예외처리를 하단부에 삽입하고, 
정상적으론 n번에선 리턴. 에러가 나면 goto로 튕겨버리면 된다.&lt;/p&gt;

&lt;p&gt;위로 올라가는 goto문이 좋지 않은 것.
아래로 내려가는 goto문은 continue 키워드와는 상관이 없다.
goto 그래도 안 쓰는 것이 좋다. 괜히 트집잡힐 수가 있기 때문에.
그런데 이런 구조는 만들고 싶을 경우, 사용해볼 수 있는 방법이 
do while(0)!&lt;/p&gt;

&lt;p&gt;do while(0)을 사용한다면 goto 대신 break로 튕겨나가게 된다.
goto나 break나 밖으로 튕겨나가는 것은 같다.
중간에 break를 통해서 밖으로 튕겨나가버릴 목적이다.&lt;/p&gt;

&lt;p&gt;나중에 함수 기능 짜다보면 이런 경우가 많다. 
중단을 하고 싶은데 공통적으로 마무리해야 하는 경우이다.&lt;/p&gt;

&lt;p&gt;이를 C++입장에서 다른 방식으로도 사용할 수 있다.
실무 가면 do while(0) 코드 많이 볼 수 있다.&lt;/p&gt;

&lt;p&gt;매크로 함수는 별로 권장하지 않음.&lt;/p&gt;

&lt;p&gt;#define Max(a,b) \붙여가며 내림.
{\ if (a&amp;gt;b) &lt;br /&gt;
printf(“%d”) a}\&lt;/p&gt;

&lt;p&gt;이게 진짜 함수인가?
윈도우 api - 소켓 가면 매크로 함수가 있음.
사용법 입장에서 함수와 동등하게 사용할 수 있는 매크로 함수가 되었느냐?&lt;/p&gt;

&lt;p&gt;if(data &amp;gt; 10)
	MAX(data, 10); -&amp;gt; 이 세미콜론이 if문을 끝내버린다. 문법적으로 함수와 동등한 입장이 아니다.
else
	MAX(data, 20);&lt;/p&gt;

&lt;p&gt;매크로 함수를 정석적으로 쓰려면 do while(0)을 쓰되 세미콜론을 사용하지 않는다.
그래서 사용시 쓰는 ;이 while에 대한 세미콜론이 되면서 if문을 살린다.&lt;/p&gt;

&lt;p&gt;제대로 된 매크로 함수는 다 do while 0으로 감싸져있다.
매크로 함수 만든다하면 do while 0으로 감싸는 것이 맞다.
문법적으론 함수와 똑같이 써도 상관이 없다.
continue는 예외처리 할 때 사용하는 키워드이다.
정상 로직을 continue로 타면 안 된다!&lt;/p&gt;

&lt;p&gt;즉, continue가 메인 로직이 되어서는 안 된다.
주된 목적이 아닐 때 continue로 튕기게 해야 한다.
메인 로직을 continue로 튕기게 하는 것은 잘못!&lt;/p&gt;

&lt;p&gt;함수 호출.&lt;/p&gt;

&lt;p&gt;void Test(void)
{
	int a = 0;
	a++;
}
test();&lt;/p&gt;

&lt;p&gt;디버그 모드에서 call이 나옴.
어셈블리에서 F11하면 단계단계 나온다. 그런데 중간에 어디론가(0871760h)로 튀었다.
각각의 함수를 jmp jmp 시키는 것 사이에 내 함수가 있다.
함수를 더 타고 가보면 실제 코드가 있다.&lt;/p&gt;

&lt;p&gt;릴리즈 모드에서는 call Test()가는데 가보면 바로 함수가 나온다.
디버그 모드에서만 점프테이블로 한번 뛰어서 간다.
실제 함수호출로 가보면 그 함수가 아니다.&lt;/p&gt;

&lt;p&gt;why?&lt;/p&gt;

&lt;p&gt;점프 테이블 -&amp;gt; 내가 갈 곳으로 가지 않고, 다른 곳으로 튕겼다가 이동한다!
이는 ‘프로젝트 속성’ 에 가보면 ‘링커’ 쪽에 있는 ‘증분링크 사용’ 기능에 영향을 받는다.&lt;/p&gt;

&lt;p&gt;증분 링크 사용의 장점 2가지.
1) 디버깅하는 동안 코드 수정이 가능하다.
2) 컴파일 속도가 개선된다. (실제 런타임 말고 컴파일속도 개선)&lt;/p&gt;

&lt;p&gt;왜 개선되는가? 실제 코드의 작동 개념이 무엇이길래?
어떤 코드를 수정했을 때, 4개의 함수가 어떤 순서로 코드영역에 올라갈지 우리는 알 수 없다. 컴파일러가 알아서 올리고, call 지점에 코드 영역에서 A는 어느 지점, B는 어느 지점이라고 호출 지점에 알려줘야 한다.&lt;/p&gt;

&lt;p&gt;그럼 만약 A1이 바뀌었다?&lt;/p&gt;

&lt;p&gt;나는 분명 A1이라는 내용만 바꾼건데, 이러한 변화가 차곡차곡 쌓이다보면 다름 함수들의 위치까지도 바뀐다.
함수 하나만 늘린 것 뿐인데 모든 함수의 위치가 다 바뀌어야 한다.
모든 링킹 과정에서 이 과정을 다 거쳐야 한다.
증분 링크 사용은 그러한 번거로움을 생략하려는 목적을 갖고 있다.&lt;/p&gt;

&lt;p&gt;점프테이블은 순서 한 번 정했으면 끝이 난다.
그럼 실제 함수를 호출하는 지점들은 변경되지 않을 수 있다.
실제 함수 코드가 바뀌어서 코드 함수들의 위치가 다 바뀌어도 점프 테이블만 바꾸면 된다.
증분 링크 사용을 켜두면 링커 사용이 빨라진다.&lt;/p&gt;

&lt;p&gt;jmp A
jmp B
jmp A1
jmp B1&lt;/p&gt;

&lt;p&gt;그럼 실제 여기에서는 그냥 주소로 튀게 만들면 된다.
이들은 함수 개수가 변하지 않는 이상은 고정된다.
실제로 코드가 바뀌면 되는 대상은 그냥 그 개별 함수 하나이다.&lt;/p&gt;

&lt;p&gt;이를 통해 링킹 시간이 단축된다.
모든 call, 주소가 박히는 연산, jmp (테이블)은 상대 좌표의 크기가 들어간다.
프로그램이 실행될 때마다 좌표가 바뀔 수 있기 때문이다.&lt;/p&gt;

&lt;p&gt;증분 링크가 활성화되어 있을 때에는 디버깅 과정에서 실행되는 코드를 새로 만든다.
이 때 지역변수를 추가 가능하다. 간단한 경우에 반영이 된다.
이런 기능이 없었다면 지금처럼 코드를 추가했을 때 (런타임 과정에서) 이미 프로세스 영역에 코드는 박혔으므로, 추가로 넣은 코드가 다 밀려야 하기 때문에, call을 할 수 없다.&lt;/p&gt;

&lt;p&gt;만일 함수 크기가 바뀐다면 테이블의 개별 함수가 바뀐다.
-&amp;gt;함수의 크기가 증분 이상으로 커지면 아예 새로운 공간에 함수를 따로 잡음.
지역변수를 디버깅 과정에서 더할 수 있다. 
이것이 지역변수를 크게 잡아놓는 이유이다. 
ex. 변수 3개인데 200바이트.&lt;/p&gt;

&lt;p&gt;코드가 돌고 있는데 런타임에 코드를 수정한다?
기대하기 어려운 상황.
이러한 이유로 존재하는구나 라고 기억하되, 활용할 생각은 하지 않는 편이 좋다.&lt;/p&gt;

&lt;p&gt;int 3은 cccccccc. 
즉 브레이크 포인터와 같은 역할이다. 그곳에 접근하는 순간 중단시킨다.&lt;/p&gt;

&lt;p&gt;점프 테이블은 코드 영역에 저장된다.&lt;/p&gt;

&lt;p&gt;CPU에서 실행된다는 것은 코드 영역에 들어있어야 한다.
IP레지스터에 있는 것을 실행시키려면 코드 영역에 있어야 한다.&lt;/p&gt;

&lt;p&gt;릴리즈는 런타임이 빨라야 하기 때문에 증분 링크 사용을 하지 않는다.
릴리즈 모드의 목적은 제품화이다.
빌드 시간을 줄이고자 하는데 실제 실무에서는 빌드가 10~20분이 걸린다.
평소라면 쉴 수 있는 핑계가 되는데, 패치할 때 이러면 시간이 오래 걸린다.&lt;/p&gt;

&lt;p&gt;—&lt;/p&gt;

&lt;p&gt;함수 호출의 과정을 보자.
여러 작업을 수행하고 RET(리턴)이라는 명령을 통해 돌아가는데,
원래 있던 자리로 돌아가버렸다. 분석해보자.&lt;/p&gt;

&lt;p&gt;call하는 지점부터 보면, 스택을 같이 보면서 간다.
콜 한번 탔을 뿐인데 스택에 뭐가 들어왔다.
그리고 콜에 박힌 지점으로 튀었다.
esp는 -4가 되었다. push가 되었기 때문이다.&lt;/p&gt;

&lt;p&gt;이때 메모리 뷰를 보면, f6, 26, 36 등의 메모리 주소가 있다.
돌아갈 자리를 스택에 꽂고 튀는 것이 바로 call이다.
그렇지 않으면 돌아갈 자리가 없다.
RET는 POP해서 다음 코드를 실행한다. 지금 현재 있는 값을 뽑아서 그 주소로 가는 것이다.&lt;/p&gt;

&lt;p&gt;esp에 pop을 하나 해서 그 값으로 이동하는 명령어가 RET이다.&lt;/p&gt;

&lt;p&gt;jmp는 아무 생각 없이 튄다.
CPU ip 레지스터가 가리키는 지점을 수행시킬 뿐이다.
eip -&amp;gt; 주소 하나가 나온다. 
cpu는 ip레지스터에 있는 메모리를 실행시킬 뿐이다.
점프하면 ip레지스터가 바뀐다.
pop ebp는 리턴 직전에 기존의 ebp를 복원하는 것이다.&lt;/p&gt;

&lt;p&gt;call -&amp;gt; 돌아올 주소를 push하면서 일어난다.
이는 어셈블리 창에 push ebp가 찍히기 이전에 일어난 일이다.&lt;/p&gt;

&lt;p&gt;크래시가 났다. 왜 그럴까? 이유를 찾을 줄 알아야 한다.
(돌아올 주소가 사라졌을 때)&lt;/p&gt;

&lt;p&gt;콜스택이란?
콜스택이 따로 있는 것이 아니라, ‘스택에 있는 것’을 계산해서 보여주는 것을 의미한다.
이를 통해 콜스택이 보여진다.
스택이 깨지면 콜스택은 사라지게 되어있다.
이 상태에서 어떻게 찾냐?&lt;/p&gt;

&lt;p&gt;절대 변하지 않는 것 하나를 찾아야 한다.
inline으로 하지 않는 이상 절대 우리 실수로 바뀌지 않는 값이 하나 있다.
esp. esp값은 절대로 깨지지 않는다.
직접적으로 어셈블리를 통해서 esp를 바꾼다는 행위는 존재하지 않는다.&lt;/p&gt;

&lt;p&gt;나의 실수로 바뀔 수 있다는 대상은, 백업 후 복업하는 대상이라면 모두 해당한다. ebp 역시 그렇다.
그러나 esp는 절대 백업 후 복원이 없다. 현재 그 위치만 가리킬 뿐이다.
sub add만 할 뿐이다.
esp를 대상으로 내가 가진 어떤 메모리를 mov로 치환하는 등의 작업은 일어나지 않는다.&lt;/p&gt;

&lt;p&gt;즉, 우리는 esp를 봐야 한다.&lt;/p&gt;

&lt;p&gt;얼토당토않게 00000000이라는 지점으로 튕겨졌을 때.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;jmp&lt;/li&gt;
  &lt;li&gt;call&lt;/li&gt;
  &lt;li&gt;ret
이 셋 말고는 튕길 수 있는 명령어가 없다.
그런데 그 전에 뭘 했느냐를 알 수가 없다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;우선 후보를 찾아야 한다.
jmp를 했는데 00000000? 찾기가 너무 힘들어진다.
당장 이 코드를 찾아낼 방법은 없다.&lt;/p&gt;

&lt;p&gt;ret를 후보로 잡는다면 현재 esp의 바로 위가 점프해온 지점일 테니까, 현재 esp를 타깃으로 보면 된다.&lt;/p&gt;

&lt;p&gt;jmp나 call로 00000000을 보내는 가능성은 흔하지 않다.
그래서 그렇게 튀는건 유추가 되었는데. 이 위에 함수가 누구지?
이 위에 이 스택을 쓰던 함수가 누굴까?&lt;/p&gt;

&lt;p&gt;esp 위의 값이 에러난 ip면 백퍼 리턴하다가 잘못된 것. 
누구의 실수임 이거?&lt;/p&gt;

&lt;p&gt;우리가 알고 있는 모든 지식을 동원해서 ‘스택’을 찾아내자!
함수의 위치가 저장되어 있는 것! (함수 호출 시 코드의 저장 흔적을 남긴다.)
-&amp;gt;함수 호출했다가 돌아오다 문제 생겼으니 이건 아님.&lt;/p&gt;

&lt;p&gt;그나마 코드의 위치가 박혀있는 흔적은 -&amp;gt; 가장 근접한 코드의 흔적은?
가장 최근에 호출한 코드 직전에 호출한 함수를 찾자.
test2를 호출한 함수의 돌아가는 지점이라도 찾자.&lt;/p&gt;

&lt;p&gt;감으로 디버깅하지 말고.&lt;/p&gt;

&lt;p&gt;그냥 봐서는 나오지 않는다.
어 이 코드 이상한데?&lt;/p&gt;

&lt;p&gt;수정을 해버리면 안된다. 차라리 손대지 않는 편이 낫다.&lt;/p&gt;

&lt;p&gt;그대로 상태로 두고, 증거를 수집한다. 확정지을 수 있는 증거를 찾는다.&lt;/p&gt;

&lt;p&gt;여기까진 잡힌거니까 이 안에서 누구냐를 찾아야한다.
이 안에서 어떤 함수를 찾아서 범위를 좁힐 것이냐?&lt;/p&gt;

&lt;p&gt;증거를 남긴다.
로그를? 
어떤 식으로?&lt;/p&gt;

&lt;p&gt;리턴값을 본다?
정상적으로 실행되는지 안되는지 리턴값을 준다?&lt;/p&gt;

&lt;p&gt;콜스택 뒤져서 A가 문제인 건 찾았다.&lt;/p&gt;

&lt;p&gt;콜스택을 더 길게 늘려서, 의미 없는 함수를 만들어서 그냥 테스트가 아니라. 
한번씩 다 래핑한다.@@@@@@
-&amp;gt;깨졌을 때 콜한 부분을 못찾음. 그 전 부분을 찾을 수 있다. 
전전함수로 찾아가서 추적가능&lt;/p&gt;

&lt;p&gt;함수 호출 전에 무슨 함수가 호출되는지 로그 남기기.
호출 하고 나서 남기던가 호출하고 나서 남기던가.
각 함수마다 추가적인 지역 변수 선언을 해서 특정 값을 남기자. ebp랑 가까운 곳에.&lt;/p&gt;

&lt;p&gt;call에 대한 횟수 넘기기+로그 호출 -&amp;gt; 호출양이 많으면 힘들 수 있다.
의도적으로 스택에 흔적을 남긴다는 충분히 해볼만한 방법!!&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;p&gt;함수 콜 리턴에 대하여.&lt;/p&gt;

&lt;p&gt;돌아갈 지점을 건드리는 건 안해도 된다.
호출해서 들어가는 부분을 보도록 하자.
A함수 호출!(어셈블리에 주소 값이 있다.)
여기 기호를 없애면 call 옆에 어떤 주소값이 나온다.&lt;/p&gt;

&lt;p&gt;돌아갈 주소를 스택에 쌓음과 동시에 진행한다.
esp의 top.&lt;/p&gt;

&lt;p&gt;스택에는 eip가 가지고 있는 다음 실행할 코드.
실제 스택에는 주소값이 들어가야 한다.
F11 눌러보면 자기 다음 명령어로 갔다.&lt;/p&gt;

&lt;p&gt;디버그 모드에선 점프 테이블로 넘어가겠지만,
그것과 상관없이 주소를 스택에 쌓을 것이다.&lt;/p&gt;

&lt;p&gt;들어가서 이래저래 자기거 하고,
B를 콜하게 되면 그 다음 주소값이 스택 프레임아랫줄에 들어간다.
리턴할 때 반대로 돌아가면서 나가보자.&lt;/p&gt;

&lt;p&gt;이러면 내 스택 정리는 끝났다.&lt;/p&gt;

&lt;p&gt;리턴RET라는 명령어가 바라보는 자리로 튄다.
pop해서 스택은 한칸 add됨.&lt;/p&gt;

&lt;p&gt;그럼과 동시에 튕겨져나간다.&lt;/p&gt;

&lt;p&gt;debug빌드는 스택이 지저분하다.
스택에 남은 잔재를 가지고서 만약 문제가 터져 이상한 지점을 가리키고 있을 때, 스택에 남은 메모리를 가지고서 어디로 가야하느냐를 살펴보자.&lt;/p&gt;

&lt;p&gt;디버그모드 esp로 찍으면 esp부터 ebp까지가 현재 스택.
ebp가 밑에 있으니까 ebp-esp = 216바이트.
이게 지금 스택 지역변수의 크기.&lt;/p&gt;

&lt;p&gt;이 시점에서 그나마 믿을 수 있는 것은 esp이다.
이 함수는 어디로 돌아가야 했을까? 앞의 함수라도 알아보자.&lt;/p&gt;

&lt;p&gt;근데 이건 esp를 보고 흔적을 찾아야하는데, 디버그 모드라서 쓰레기값이 너무 많다.
코드스러운게 너무 많다. 스택을 많이 땡겨놓았기 때문.&lt;/p&gt;

&lt;p&gt;디버그 모드에서 실제로 쓰는 공간만 c로 밀어서, 스택에는 코드 쓰레기값이 남아있다.&lt;/p&gt;

&lt;p&gt;mov esp, ebp&lt;/p&gt;

&lt;p&gt;ebp가 신뢰도가 높진 않지만, 그 ebp에는 돌아갈 ebp랑 아래보면 돌아갈 주소가 있다.
esp는 위에 있고, ebp를 보니 좀 밑에 쪽에 있다.&lt;/p&gt;

&lt;p&gt;콜스택을 비주얼스튜디오는 어떻게 보여주고 있나?
esp부터 역으로 스택 메모리를 분석해서 보여준다.
돌아갈 주소가 깨지니까 호출 스택도 다 깨진다.
ebp 바로 아래는 eip 백업 값이다.&lt;/p&gt;

&lt;p&gt;스택 크기는 시작할 때 함수 값을 빼서 그것을 가지고 계산한다.
돌아갈 주소가 그곳에 있을 것이니까…&lt;/p&gt;

&lt;p&gt;이 함수의 스택 크기를 알아야 돌아갈 주소 확인할 수 있다.
esp를 sub한 크기를 알아야 ebp를 알 수 있고 돌아갈 주소를 알 수 있다.
그 함수는 여기서 이만큼을 해야하니까 여기로 갈 것이고.
역으로 분석하면 돌아갈 주소를 알 수 있다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>0415 내용</title>
   <link href="https://gyurioh.github.io//2022/05/20/0415-%EB%82%B4%EC%9A%A9"/>
   <updated>2022-05-20T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/20/0415 내용</id>
   <content type="html">&lt;p&gt;2의 보수란? 비트를 전부 반전시키고 +1.&lt;/p&gt;

&lt;p&gt;char ch = ‘a’;
문자라는 것은 없다. 아스키 코드가 저장되었을 뿐이다.
출력했을 때 a가 보인 것 뿐!
출력했을때 char로 출력하면 a, int로 출력하면 65가 나오는 것이다.&lt;/p&gt;

&lt;p&gt;규모 있는 회사의 규칙은 : 변수 선언을 무조건 한 줄에 하나씩 한다.&lt;/p&gt;

&lt;p&gt;포인터를 선언할 때.
int *p;
int *p1, p2, p3; //p2, p3은 포인터가 아니다.
int *p;&lt;/p&gt;

&lt;p&gt;이상한 건 쓰면 안 된다.&lt;/p&gt;

&lt;p&gt;“연산자 우선순위는 암기하자!”
연산자 우선순위 관련한 문제가 자꾸 나오고 있따.
거의 백프로 틀린다.&lt;/p&gt;

&lt;p&gt;단항 연산자, 증감 연산자, 전위 후위의 특성은 필요가 없다.
++a, a++ -&amp;gt; 일반 변수의 경우 그냥 어셈블리 순서를 바꾸는 것으로 해결이 가능하다.&lt;/p&gt;

&lt;p&gt;CPU에 아웃 오브 오더링이 존재한다.
어셈블리 명령어가 조건에 의해서 처리되는 순서가 바뀌는 것이다.
CPU가 128개 이상의 명령어를 버퍼로 끌어와서 미리 진행해버리기 때문이다. 
먼저 처리할 수 있는 연산은 빨리빨리 해버린다.
즉 명령어 처리 순서가 바뀐다. 이것이 아웃 오브 오더링 익스큐션이다. (=명령어 재배치)
이는 멀티스레드 할 때 깊게 진행해볼 것이다.&lt;/p&gt;

&lt;p&gt;비트 &amp;amp;연산자의 활용 용도? : 비트를 날려버릴 때.
(하위 비트를 날려버림으로서 8의 단위, 64의 단위 등을 맞춰줄 수 있음)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;, «연산도 예전에는 많이 사용했다.
맵의 크기를 계산할 때 2의 n승으로 크기를 잡는다.
어떤 좌표가 있을 때, 그 좌표에 대한 타일 좌표를 구하려면?
서버에서는 그리드, 타일 방식을 사용한다.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;하지만 이제는 », « 방식을 사용하지 않는다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;, «가 나누기, 곱하기라는 생각을 하지 않기에 권장하지 않는다.
아 그래도 나는 배운 것을 써먹고 싶다~ 라면 주석을 꼭 달아두자.
곱하기 몇. 이건 이런 의도다 라는 점을 반드시 알려주자.
반복문이 아까워서 풀어 썼던 시절에 사용했던 방식이다.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;*3항 연산자 : if문이 빠른가? 3항연산자가 빠른가?&lt;/p&gt;

&lt;p&gt;jne =&amp;gt; jump not equal. 0이 아니라면 튀겠다.
3항 연산자는 tmp를 낀다. ex) a++
그래서 if문을 사용할 때보다 더 느릴 수 있다.
더 빠르지는 않다. if는 tmp를 끼지 않는다.
하지만 이러한 부분은 컴파일러에 의해서 달라질 수 있다.&lt;/p&gt;

&lt;p&gt;항상 검색으로 해결하려는 태도는 지양해라.
검색으로 나왔어도 뇌피셜일 수 있다.
그냥 눈으로 보고 판단해라. 그게 정답이다.&lt;/p&gt;

&lt;p&gt;*16진수 출력의 2가지 방법&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;%x -&amp;gt; 그냥 변수가 가진 16진수만 튀어나옴.&lt;/li&gt;
  &lt;li&gt;%p -&amp;gt; 포인터 주소 값을 출력하는 것이 목적이다. 주소값을 채우기 위해 8개의 16진수가 출력된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sizeof 연산자는 상수로 바로 저장되어서 하드코딩된다.
런타임에 수행되지 않는다.&lt;/p&gt;

&lt;p&gt;AND 논리 연산자가 중첩될 때 : False가 나올 가능성이 높은 것을 왼쪽에 두어야 한다. (그래야 연산이 조금이라도 빨라짐)
OR 논리 연산자 중첩될 때 : True가 나올 가능성이 높은 것을 왼쪽에 두어야 한다.&lt;/p&gt;

&lt;p&gt;&amp;amp;&amp;amp;연산자 : 어셈블리 cmp와 대응된다.
cmp는 두 피연산자를 비교한다.
cmp에는 zero flag라는 것이 있는데, 초기값은 NOT ZERO(NZ)로 0이다.
cmp결과 두 피연산자가 같아서 0이 튀어나오면 zero flag는 1로 세트된다.
반대로 두 피연산자가 다르다면 zero flag는 그대로 0으로 남아있는다.&lt;/p&gt;

&lt;p&gt;&amp;amp;연산자 (비트단위AND) : 마스킹할 때 주로 사용.
네트워크에서 IP주소 세팅 시 사용한다.
IP, SubnetMask, Gateway
(a&amp;amp;0xFF00) » 8&lt;/p&gt;

&lt;p&gt;^연산자 (비트단위XOR) : 암호화/복호화할 때 주로 사용한다.
XOR연산자를 2번 사용하면 원상태로 복원된다.&lt;/p&gt;

&lt;p&gt;예를들어 기본 바탕에 그림이 있고, 커서가 움직일 때마다 그 자리를 표현해줘야 하는 상황.
좌표가 바뀌고 있으니 항상 새롭게 렌더링해야한다. 바탕 찍고 커서 찍고? 비효율적.
XOR로 그림을 그리면 어떤 그림이 하나 있는데, XOR찍으면 색깔이 나온다.
이걸 지우려면 XOR로 한번 더 찍으면 된다. 그럼 복원된다.
과거 좌표 XOR / 새 좌표 XOR&lt;/p&gt;

&lt;p&gt;명시적 형변환 : 캐스팅은 하는 일이 없다. 실질적으로 존재하지 않는다.
컴파일러에게 “이건 내 의도야, 오류내지 마~” 라고 지시해주는 역할이다. 포인터도 마찬가지이다.
단, 실수형과 정수형의 변환은 실제 함수호출이 일어난다. 데이터 타입이 아예 다르기 때문이다. 
이 건을 제외한 모든 캐스팅은 사실상 없는 것이다.&lt;/p&gt;

&lt;p&gt;switch문 : 네트워크 할 때 어마어마하게 들어간다.
서버가 유저가 보낸 메시지 타입에 따라 분기를 타기 때문이다.
MMORPG 규모 있는 컨텐츠라면 메시지 종류만 수백개이다.
근데 극혐하는 사람이 있다. 
1) 너무 길다.
2) 성능 떨어질 수 있다. 마지막 분기까지 가려고 수백개를 if cmp해야 할 수도 있으므로…
이러한 이유로 자료구조 hashtable 등으로 치환시키기도 한다.&lt;/p&gt;

&lt;p&gt;그래서 이게 언제 분기를 타고 안 타는지 알아야 한다.
우리는 분기를 ‘타지 않게’ 만들어줘야 하기 때문이다.
무작정 만들면 cmp를 500번동안 돌리는 상황도 만들어진다.
분기를 타지 않을 경우, 점프 테이블이 생성된다.
이때 첫번째 case(상수)가 기준이 된다.
case상수의 최대치를 초과하면 밖으로 나가버린다. (ja 명령어)
함수 포인터 배열 처럼 만들어진 것이다.
만일 case값 사이에 간격이 존재할 경우, 그 사이를 밖으로 빠져나가는 것으로 채운다.
case값을 역으로 하나씩 줄어드는 식으로 하면?
분기문 나오면 cmp가 뜬다.&lt;/p&gt;

&lt;p&gt;그래서 언제 분기를 타는지?
너무 case값 사이의 크기차이가 크면 cmp를 계속 한다.
테이블 자체가 사라진다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>0413 내용</title>
   <link href="https://gyurioh.github.io//2022/05/20/0413-%EB%82%B4%EC%9A%A9"/>
   <updated>2022-05-20T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/20/0413 내용</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;13&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;우리는 이제 32비트 프로젝트를 잘 사용하지 않음. 
64비트 프로젝트로만 작업을 하게 될 것이다.&lt;/p&gt;

&lt;p&gt;릴리즈 모드라서 디버깅이 되지 않는 일은 없다.
디버거는 프로세스를 잡고 디버깅을 해버리는 것이다.
모든 프로세스를 다 잡고 디버깅할 수 있다.&lt;/p&gt;

&lt;p&gt;Q, 릴리즈를 해두고 F5를 눌렀는데 되지 않는다?
-&amp;gt; 디버깅이 안 되는 것이 아니고, 소스코딩이 되지 않았기 때문에 브레이크 포인트가 걸리지 않는다.
애초에 소스 코드가 사라지면 브레이크 포인트를 걸 대상이 없어지기 때문이다.&lt;/p&gt;

&lt;p&gt;우리가 보는 디버깅 = 내가 짠 소스코드와 어셈블리를 매핑시켜서 디버깅하는 것.
그렇다면 매핑에 대한 작업을 누가 어떤 정보로 수행하는가?&lt;/p&gt;

&lt;p&gt;디버그 정보 생성을 no로 만들면 디버깅하지 못한다.
브레이크포인트를 걸고 조사식으로 변수를 확인해야 한다.&lt;/p&gt;

&lt;p&gt;100%동일한 소스코드를 디버깅 할 때도
프로그램 데이터 베이스 파일 (program database file, pdb)가 필요하다.
매핑 정보를 pdb로 보기 때문이다.
만일 pdb가 없더라도 어셈블리로 디버깅을 수행해야 한다.&lt;/p&gt;

&lt;p&gt;프로그램 생성 조건 -&amp;gt; pdb가 나옴.
pdb가 나온 건 디버깅이 된 것이다. 
pdb가 있어야만 디버깅이 가능하다. 게임을 라이브서비스 할 때에는 pdb를 항시 보존시켜야 한다. 이는 빌드할 때마다 버전이 다르게 들어간다.&lt;/p&gt;

&lt;p&gt;만일 pdb가 없으면 소스코드가 똑같이 있어도, 매핑을 시키지 않는다.
새로 빌드해버리면 다른 코드로 인식해버린다.
같은 시점에 나오는 pdb가 없어져버리면 힘들다.
비주얼 스튜디오를 쓰지 못하고 윈디버거 등으로 수행해야 한다. 텍스트로만 디버깅해야 해서 골치가 아프다.&lt;/p&gt;

&lt;p&gt;Q, 브레이크가 안 걸린 이유?
A. 속성 C++ 최적화 때문. 최대 최적화로 현재 옵션이 들어가있음.
최대 최적화란 ‘맘대로 결과를 갈아엎어버릴게. 필요 없는 건 지울게. 변수도 내 맘대로 바꿀게. 함수도 없앨게.’ 라는 선언.
릴리즈모드에는 기본적으로 속도 최적화가 걸려있어 내가 쓴 코드와 다른 결과물이 생성된다.
그래서 브레이크가 안 걸린 것처럼 보인다.&lt;/p&gt;

&lt;p&gt;안 쓰고 있어서 호출하지 않아도 되는 함수 &amp;lt;= 없어진다!&lt;/p&gt;

&lt;p&gt;최적화가 되면 내 코드와 완전히 다른 결과물이 탄생한다.
대부분 브레이크가 걸리지 않는다.&lt;/p&gt;

&lt;p&gt;최적화에서 ‘사용 안함(/Od)’으로 바꾸면 디버깅이 가능하다.
기본적으로 개발을 할 때에는 릴리즈모드에서 최적화를 끈 상태로 이행한다.
이렇게 하면 내가 짠 코드만 그대로 어셈블리 명령어로 나타난다.&lt;/p&gt;

&lt;p&gt;주소 표시 = 명령어가 위치한 메모리.&lt;/p&gt;

&lt;p&gt;test = &amp;amp;&amp;amp; (0을 확인)
eax 레지스터 리턴 값을 이용한다.
컴파일 언어에서는 리턴 하고 안하고를 결정하지 못한다. 리턴값 있으면 무조건 리턴해야 한다.&lt;/p&gt;

&lt;p&gt;Xor = 비트 단위로 같으면 0, 다르면 1 -&amp;gt; 0을 만들어 버린다.
Xor eax, eax는 대표적으로 eax를 0으로 만들어주는 코드이다.&lt;/p&gt;

&lt;p&gt;cmp = 비교. 차를 구한다.
cmp ebp esp -&amp;gt; 차를 구해서 두 값이 같은지 알고 싶은 상황이다.
만약 서로 다른 값이 나오면 이를 문제삼는다.&lt;/p&gt;

&lt;p&gt;jne = jump not equal 같지 않으면 점프한다.&lt;/p&gt;

&lt;p&gt;sub esp 하나로 모든 지역변수의 크기 확보를 끝낸다.
선언과 동시에 초기화 vs 선언 하고 초기화 =&amp;gt; 같은 것!! 차이가 없다.
어셈블리 단계에서 변수의 선언이란 존재하지 않는다.&lt;/p&gt;

&lt;p&gt;클래스 인스턴스&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;메모리 확보&lt;/li&gt;
  &lt;li&gt;생성자 호출&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;블럭으로 문법을 막아둔다.&lt;/p&gt;

&lt;p&gt;volatile : 멀티스레드에서 언급된다.
물리 메모리에 더 쉽게 접근하기 위해 캐시 메모리가 존재하는데,
volatile이 캐시 메모리를 건너뛰고 물리메모리에서 값을 가져온다는 것은 잘못된 설명이다.
“캐시를 사용하지 않게 한다” &amp;lt;- 뇌자극 책 설명.
“그냥 최적화 컴파일을 하지 않는다!” 딱 이것 하나 한다. no register와 같은 의미.
최적화 컴파일을 끈 상태 = 모든 변수에 볼레타일을 단 것이나 다름이 없음.&lt;/p&gt;

&lt;p&gt;그렇다면 캐시라는 표현은 어째서 존재하는가?
eax를 캐시로 쓴 것이다. 그냥. ‘캐시 메모리’가 아니다!
캐시라는 표현이 모호하기 때문에 쓰지 않는 것이 좋다.&lt;/p&gt;

&lt;p&gt;*최적화 컴파일 장점 : 속도가 빨라진다.
릴리즈에서는 안전 장치가 제거되어 속도가 빨라진다.
디버깅 안전장치들이 빠지고, 최적화 컴파일이 수행되면 성능향상이 꽤나 있다.
코드를 깔끔하게 잘 짰다면 조금, 더러우면 많이.&lt;/p&gt;

&lt;p&gt;*최적화 컴파일 단점 : 문제 해결이 느리다.
다만 그 속도의 향상을 포기할 수 없다는 회사도 존재한다.
그냥 당연한 줄 알고 릴리즈로 하는 회사도 존재한다.
그런 회사의 특징은 문제가 터져도 분석하지 못한다는 점이다.&lt;/p&gt;

&lt;p&gt;속도적인 컴파일은, 코딩을 애초에 잘 하면 괜찮다.
어셈블리가 예쁘게 나오도록 코딩을 하자!
예쁘게 나온다는 것은 어셈블리가 빠르게 나오도록.&lt;/p&gt;

&lt;p&gt;inline 처리 -&amp;gt; 함수 호출이 무겁다. 
호출할 때마다 스택에 넣고 넣고 들어갈 때마다 빼고 빼고.
C++에 inline 키워드 -&amp;gt; 최적화 컴파일을 하면 의미가 없어진다. 알아서 가능해진다.
inline을 했어도 최적화 컴파일을 끄면 인라인 처리는 수행되지 않는다.&lt;/p&gt;

&lt;p&gt;검증이 되지 않은 코드는 inline 처리를 하지 않는 편이 좋다.
검증이 되면 할 수 있는데, 검증이 된 서버 자체가 존재하지 않는다.
온라인 게임 서버는 영원히 개발 중 디버깅 상태에 있다.
계속 디버깅을 고려해서 개발할 수밖에 없다.&lt;/p&gt;

&lt;p&gt;만일 무조건 최적화 컴파일을 해야 하는 상황이라면,
그때서야 써볼 수 있는 것이 volatile이다.&lt;/p&gt;

&lt;p&gt;최적화 컴파일 했고 뭔가 문제는 터졌다? 
유저가 어떤 행위를 할 때 문제가 터지더라 하고 범위가 좁혀졌다면, 그나마 의심이 가능하다.
거기에 관련된 변수나 기능, 의심되는 부분을 volatile 선언한다.&lt;/p&gt;

&lt;p&gt;그렇게 하면 내가 짠 로직대로 어셈블리는 실행될 것이다.
inline처리 해도 내가 짠 로직대로 어셈블리는 나온다.&lt;/p&gt;

&lt;p&gt;로그 찍을 때.
디버깅할 때도 로그를 많이 활용한다.
어떤 함수 안에서 디버깅하는데 최적화 컴파일 중에 변수가 조사식에서 보이지않는다.
여기서 변수가 어떤 값일지 궁금한데 값을 알 수 없다면,
그 변수를 volatile 선언한다.&lt;/p&gt;

&lt;p&gt;중간에 디버깅 목적으로 volatile 변수를 추가할 것이다.
보존을 위하여.
멀티 스레드 환경에서 volatile을 사용하면 나의 의도대로 로직이 보존되기 떄문이다.&lt;/p&gt;

&lt;p&gt;const int a;
const 상수 -&amp;gt; 어셈블리에서 a를 쓰는 모든 지점이 ‘10’으로 치환되었다!&lt;/p&gt;

&lt;p&gt;32bit/64bit&lt;/p&gt;

&lt;p&gt;ILP64
LP64 포인터 8 유닉스
LLP64 롱롱 64비트
SILP64 숏부터 64. char 빼고는 모두 8바이트화 시켜버린다.&lt;/p&gt;

&lt;p&gt;64비트 데이터 모델은 위키백과에 검색하면 나온다.
규칙만 이해하면 된다.&lt;/p&gt;

&lt;p&gt;short 자료형 : -32768 ~ 32767.
65535라는 숫자도 외워두자.&lt;/p&gt;

&lt;p&gt;우리는 돈, 경험치 모두 64비트로 한다.
그 외에 변수는 4바이트를 사용한다.
포인터를 썼을 때, 메모리 크기가 조금이라도 바뀌면 오작동한다.
뭔가가 하드코딩 되었거나 잘못된 것이다.
변수 하나 크기가 바뀜으로써 어떤 문제가 발생하지 모른다.&lt;/p&gt;

&lt;p&gt;버그 나오면 ‘프로세스에 연결’ 하기!!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>처음 쓰는 일기</title>
   <link href="https://gyurioh.github.io//2022/05/19/%EC%B2%AB-%EA%B8%80"/>
   <updated>2022-05-19T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2022/05/19/첫 글</id>
   <content type="html">&lt;p&gt;깃허브 블로그는 처음 써봐서 어색하다.
그래도 네이버 블로그보다는 훨씬 나은 것 같다.&lt;/p&gt;

&lt;p&gt;끝!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Difference between font formats</title>
   <link href="https://gyurioh.github.io//2019/08/31/difference-between-font-formats"/>
   <updated>2019-08-31T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2019/08/31/difference-between-font-formats</id>
   <content type="html">&lt;h1 id=&quot;h1&quot;&gt;h1&lt;/h1&gt;

&lt;h2 id=&quot;h2&quot;&gt;h2&lt;/h2&gt;

&lt;h3 id=&quot;h3&quot;&gt;h3&lt;/h3&gt;

&lt;h4 id=&quot;h4&quot;&gt;h4&lt;/h4&gt;

&lt;h5 id=&quot;h5&quot;&gt;h5&lt;/h5&gt;

&lt;hr /&gt;

&lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. &lt;a href=&quot;//#&quot;&gt;Banh&lt;/a&gt; mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a&lt;/li&gt;
  &lt;li&gt;b&lt;/li&gt;
  &lt;li&gt;c&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VHS roof party waistcoat cold-pressed, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snippet.CodeExample();&lt;/code&gt; master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;args:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Image caption in Jekyll</title>
   <link href="https://gyurioh.github.io//2018/02/03/image-captions-in-jekyll"/>
   <updated>2018-02-03T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2018/02/03/image-captions-in-jekyll</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1573481193569-c00872fb99fb?ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;fm=jpg&amp;amp;crop=entropy&amp;amp;cs=tinysrgb&amp;amp;dl=k-mitch-hodge-yTVqCMI2yPY-unsplash.jpg&amp;amp;w=2400&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Photo by &lt;a href=&quot;https://unsplash.com/@kmitchhodge?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;K. Mitch Hodge&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/collections/8725460/sky?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

&lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

&lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

&lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

&lt;p&gt;Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Quotes In Jekyll</title>
   <link href="https://gyurioh.github.io//2017/02/05/quotes-test"/>
   <updated>2017-02-05T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2017/02/05/quotes-test</id>
   <content type="html">&lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

&lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

&lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

&lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

&lt;p&gt;Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;p&gt;Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;quotes-with-lists&quot;&gt;Quotes with Lists&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;p&gt;Actually hella you probably haven’t heard of them quinoa try-hard la croix. Street art schlitz actually hell of pour-over air plant. Post-ironic franzen brunch mumblecore readymade. Food truck photo booth polaroid, gochujang vegan street art yr before they sold out man bun. Tilde selfies chia pitchfork everyday carry post-ironic mumblecore sartorial VHS master cleanse activated charcoal biodiesel williamsburg cronut jean shorts. Poutine helvetica keffiyeh butcher pop-up.&lt;/p&gt;
  &lt;h2 id=&quot;list&quot;&gt;List&lt;/h2&gt;
  &lt;ul&gt;
    &lt;li&gt;Item 1&lt;/li&gt;
    &lt;li&gt;Item 2&lt;/li&gt;
    &lt;li&gt;Item 3
      &lt;h2 id=&quot;list-2&quot;&gt;List 2&lt;/h2&gt;
      &lt;ol&gt;
        &lt;li&gt;Item 1&lt;/li&gt;
        &lt;li&gt;Item 2&lt;/li&gt;
        &lt;li&gt;Item 3&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;quotes-with-quotes&quot;&gt;Quotes with Quotes&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

    &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

    &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

    &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;quotes-with-image&quot;&gt;Quotes with Image&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://unsplash.com/photos/OQsxdghBKrU/download?force=true&amp;amp;w=640&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://unsplash.com/photos/OQsxdghBKrU/download?force=true&amp;amp;w=640&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Photo by &lt;a href=&quot;https://unsplash.com/@alanrobertjones?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Alan Jones&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/sky?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;quotes-with-code&quot;&gt;Quotes with Code&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;&lt;/p&gt;

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// main method&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello Jekyll&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;quotes-with-quotes-in-quotes&quot;&gt;Quotes with Quotes in Quotes&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

  &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

  &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

  &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

    &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

    &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.
Lorem ipsum dolor amet tousled viral art party blue bottle single-origin coffee cardigan, selvage man braid helvetica. Banh mi taxidermy meditation microdosing. Selvage cornhole YOLO, small batch vexillologist raclette VHS prism sustainable 8-bit ugh semiotics letterpress disrupt pop-up. Celiac shabby chic ugh, jianbing whatever kitsch tattooed edison bulb kogi irony etsy.&lt;/p&gt;

      &lt;p&gt;Franzen polaroid hammock iceland blue bottle woke disrupt tilde kale chips raw denim ramps vaporware before they sold out irony. Narwhal vaporware offal shaman celiac kinfolk activated charcoal salvia lomo irony readymade normcore. Yr activated charcoal kombucha, man braid whatever biodiesel hella crucifix adaptogen bicycle rights small batch skateboard mixtape. Hot chicken sustainable green juice 90’s. Ennui kickstarter hella pug, meggings man bun shaman messenger bag. Chambray adaptogen kombucha pug affogato, kogi green juice distillery ugh banh mi.&lt;/p&gt;

      &lt;p&gt;VHS roof party waistcoat cold-pressed, street art wolf master cleanse affogato franzen. Shaman iceland pour-over intelligentsia typewriter tilde, pitchfork copper mug. Wayfarers kickstarter adaptogen vinyl beard kombucha. Organic pinterest master cleanse, mixtape fam gentrify lo-fi kogi.&lt;/p&gt;

      &lt;p&gt;Salvia blue bottle fanny pack mlkshk normcore YOLO viral umami four dollar toast skateboard. Chambray taxidermy slow-carb street art chartreuse. Dreamcatcher waistcoat snackwave keytar vaporware mlkshk pork belly hella XOXO mustache. Tattooed semiotics edison bulb, disrupt polaroid craft beer vape enamel pin bespoke flannel letterpress brooklyn subway tile copper mug. Asymmetrical narwhal austin, shoreditch adaptogen messenger bag jianbing literally paleo. Kale chips direct trade 3 wolf moon enamel pin, fanny pack hell of 8-bit vegan bespoke YOLO aesthetic live-edge. Retro succulents before they sold out whatever bushwick.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Jejkyll Headers</title>
   <link href="https://gyurioh.github.io//2017/01/02/headers-test"/>
   <updated>2017-01-02T00:00:00+09:00</updated>
   <id>https://gyurioh.github.io/2017/01/02/headers-test</id>
   <content type="html">&lt;h1 id=&quot;headers-test&quot;&gt;Headers Test&lt;/h1&gt;
&lt;p&gt;This page tests jekyll headers&lt;/p&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;
&lt;p&gt;This largest header&lt;/p&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;
&lt;p&gt;This 2nd largest header&lt;/p&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;
&lt;p&gt;This third largest header&lt;/p&gt;

&lt;h4 id=&quot;header-4&quot;&gt;Header 4&lt;/h4&gt;
&lt;p&gt;This medium header&lt;/p&gt;

&lt;h5 id=&quot;header-5&quot;&gt;Header 5&lt;/h5&gt;
&lt;p&gt;This 2nd smallest header&lt;/p&gt;

&lt;h6 id=&quot;header-6&quot;&gt;Header 6&lt;/h6&gt;
&lt;p&gt;This smallest header&lt;/p&gt;
</content>
 </entry>
 

</feed>
